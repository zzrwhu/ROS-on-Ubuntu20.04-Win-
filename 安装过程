Reference :
https://blog.csdn.net/mid_Faker/article/details/109003882
http://wiki.ros.org/noetic/Installation/Ubuntu#Installation.2FUbuntu.2FSources.Set_up_your_keys

系统要求：Ubuntu20.04 WSL version 1

ROS安装版本: Noetic

1、添加 sources.list（设置你的电脑可以从 packages.ros.org 接收软件.）
  sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
2、添加 keys
  sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
3、安装
  sudo apt update
安装桌面完整版 : 包含ROS、rqt、rviz、机器人通用库、2D/3D 模拟器、导航以及2D/3D感知
  sudo apt install ros-noetic-desktop-full

Desktop Install: Everything in ROS-Base plus tools like rqt and rviz
  sudo apt install ros-noetic-desktop

ROS-Base: (Bare Bones) ROS packaging, build, and communication libraries. No GUI tools.
  sudo apt install ros-noetic-ros-base

There are even more packages available in ROS. You can always install a specific package directly.

  sudo apt install ros-noetic-PACKAGE
e.g.
  sudo apt install ros-noetic-slam-gmapping

To find available packages, see ROS Index or use:
  apt search ros-noetic

4. Environment setup
You must source this script in every bash terminal you use ROS in.
  source /opt/ros/noetic/setup.bash
It can be convenient to automatically source this script every time a new shell is launched. These commands will do that for you.
以下语句将上述语句加入~/.bashrc文件中，每次开启时将不用再次输入上述语句
Bash：
If you have more than one ROS distribution installed, ~/.bashrc must only source the setup.bash for the version you are currently using.
  echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
  source ~/.bashrc
zsh:
  echo "source /opt/ros/noetic/setup.zsh" >> ~/.zshrc
  source ~/.zshrc

5.Dependencies for building packages
To install the tools and other dependencies for building ROS packages, run:
  sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
6.Initialize rosdep
After installing, you can initialize rosdep with the following.
  sudo rosdep init
  rosdep update
  这一步会出现网络无法访问的问题，似乎不影响ROS正常运行，也可更换为国内源进行init
  参考了古月居的方法https://www.guyuehome.com/12640，修改了hosts并手动添加了/etc/ros/rosdep/sources.list.d/20-default.list文件，仍然无法访问。
  参考博客https://blog.csdn.net/leida_wt/article/details/115120940?utm_medium=distribute.pc_relevant_download.none-task-blog-2~default~BlogCommendFromBaidu~default-4.nonecase
  （1）修改/usr/lib/python3/dist-packages/rosdep2/sources_list.py文件增加代理
      #adding proxy
      url = "https://ghproxy.com/"+url
      72行 DEFAULT_SOURCES_LIST_URL
  （2）修改/usr/lib/python3/dist-packages/rosdistro/__init__.py文件增加代理
      #DEFAULT_INDEX_URL = 'https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml'
      DEFAULT_INDEX_URL = 'https://ghproxy.com/https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml'
  （3）修改/usr/lib/python3/dist-packages/rosdistro/manifest_provider/github.py
      改了三处URL，均有#adding proxy注释
  （4）修改了/usr/lib/python3/dist-packages/rosdep2/rep3.py	39行
      REP3_TARGETS_URL
  （5）修改了/usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py 36行
  运行成功
7. 测试turtle示例
在三个terminal中分别运行
  roscore
  这是一个start up命令，会开启a ROS Master， a ROS Parameter Server，a rosout logging node
  rosrun turtlesim turtlesim_node
  运行一个结点，此时若没有安装图形化界面将会出现error: libQt5Core.so.5
  rosrun turtlesim turtle_teleop_key
  
  （1）对于error: libQt5Core.so.5输入了
      sudo strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5
  
      再次运行后出现如下error
      qt.qpa.xcb: could not connect to display
      qt.qpa.plugin: Could not load the Qt platform plugin "xcb" in "" even though it was found.
      This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.
      仍然是无GUI界面无法显示，安装Xming软件，将Windows和Linux进行远程链接
  （2）根据博客https://blog.csdn.net/chch2010523/article/details/116532678  配置Xming
      首先在Windows命令提示符中输入wsl -l -v 查看自己的wsl是1还是2
      在zshrc或bashrc中添加如下代码
      export DISPLAY=:0 # in WSL 1
      # export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0 # in WSL 2
      export LIBGL_ALWAYS_INDIRECT= 
      export LIBGL_ALWAYS_SOFTWARE=1
      然后source ~/.bashrc
   (3)启动Xming并运行三个ros语句
      输入key部分后小乌龟不移动的原因：运行第三个语句后鼠标点击了其他窗口，导致键盘操作在其他窗口上，不要用鼠标做多余点击即可。
至此，ROS在WSL上的配置即测试全部完成。
